N = 14131431108308143454435007577716000559419205062698618708133959457011972529354493686093109431184291126255192573090925119389094648901918393503865225710648658
e = 65537
c = 369736930929760297065148911584919945466794276533858081549700753121893604016699927496864932685200662366179250652803528363353932376682054013105949663114413852586389919202924132809483441495238161428233547875668104945698323121385065197782600475921041555452772144681452939590698678253925080280869994885646313802792161740051297826057978620138823712041850886786590837601368344409524490101282091782091765734920760597884213547117275271182937307943414411140862797411211812840646424968705533846088722976386853952966723471025208925257768685048556327927976153389326732091529480995211216078879182753385693835387902190157692707274

a, b = two_squares(N)
p2, q2 = a, b
n2 = p2^5 * q2^3
phi = (p2^4)*(p2 - 1)*(q2^2)*(q2 - 1)
d = inverse_mod(e, phi)
m = power_mod(c, d, n2)

# 将整数 m 转成 bytes（低位在前，故需要 reverse）
flag_bytes = bytes(m.digits(256)[::-1])
print("flag2:",flag_bytes)
